-- Find the item that has the minimum weight
SELECT *
FROM ITEMS
WHERE WEIGHT = (
  SELECT MIN(WEIGHT)
  FROM ITEMS
);

-- Find the different warehouses in "Pune"
SELECT WNAME
FROM WAREHOUSES
WHERE CITY = 'Pune';

-- Find the details of items ordered by a customer "Dillip"
SELECT I.ITEMNO, I.DESCRIPTION, I.WEIGHT, I.COST
FROM ITEMS I
INNER JOIN ORDER_ITEMS OI ON I.ITEMNO = OI.ITEMNO
INNER JOIN ORDERS O ON OI.ONO = O.ONO
INNER JOIN CUSTOMER C ON O.CNO = C.CNO
WHERE C.CNAME = 'Dillip';

-- Find a warehouse which has maximum stores
SELECT W.WNAME, COUNT(*) AS STORE_COUNT
FROM WAREHOUSES W
INNER JOIN STORES S ON W.WID = S.SID
GROUP BY W.WID
HAVING COUNT(*) = (
  SELECT MAX(STORE_COUNT)
  FROM (
    SELECT W.WID, COUNT(*) AS STORE_COUNT
    FROM WAREHOUSES W
    INNER JOIN STORES S ON W.WID = S.SID
    GROUP BY W.WID
  ) AS MAX_STORE_COUNT
);

-- Find an item which is ordered for a minimum number of times
SELECT I.ITEMNO, I.DESCRIPTION, COUNT(*) AS ORDER_COUNT
FROM ITEMS I
INNER JOIN ORDER_ITEMS OI ON I.ITEMNO = OI.ITEMNO
GROUP BY I.ITEMNO, I.DESCRIPTION
HAVING COUNT(*) = (
  SELECT MIN(ORDER_COUNT)
  FROM (
    SELECT COUNT(*) AS ORDER_COUNT
    FROM ORDER_ITEMS
    GROUP BY ITEMNO
  ) AS MIN_ORDER_COUNT
);

-- Find the detailed orders given by each customer
SELECT C.CNAME, O.ONO, O.ODATE, I.DESCRIPTION, OI.ORDERED_QUANTITY
FROM CUSTOMER C
INNER JOIN ORDERS O ON C.CNO = O.CNO
INNER JOIN ORDER_ITEMS OI ON O.ONO = OI.ONO
INNER JOIN ITEMS I ON OI.ITEMNO = I.ITEMNO;
